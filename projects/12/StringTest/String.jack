// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack

/**
 * Represents character strings. In addition for constructing and disposing
 * strings, the class features methods for getting and setting individual
 * characters of the string, for erasing the string's last character,
 * for appending a character to the string's end, and more typical
 * string-oriented operations.
 */
class String {
    field Array string;
    field int length;
    field int maxLength;

    /** constructs a new empty string with a maximum length of maxLength
     *  and initial length of 0. */
    constructor String new(int maxLength) {
        if(maxLength=0){
            let maxLength=maxLength+1;
        }
        let maxLength=maxLength;
        let string=Array.new(maxLength);
        let length=0;
        return this;
    }

    /** Disposes this string. */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    /** Returns the current length of this string. */
    method int length() {
        return length;
    }

    /** Returns the character at the j-th location of this string. */
    method char charAt(int j) {
        return string[j];
    }

    /** Sets the character at the j-th location of this string to c. */
    method void setCharAt(int j, char c) {
        let string[j]=c;
        return;
    }

    /** Appends c to this string's end and returns this string. */
    method String appendChar(char c) {
        let string[length]=c;
        let length=length+1;
        return this;
    }

    /** Erases the last character from this string. */
    method void eraseLastChar() {
        let string[length]=null;
        let length=length-1;
        return;
    }

    /** Returns the integer value of this string, 
     *  until a non-digit character is detected. */
    method int intValue() {
        var boolean neg;
        var int v;
        var int d;
        var int i;
        let v=0;
        let i=0;
        if(string[0]=45){
            let i=1;
            let neg=true;
        }
        while(i<length){
            let d=string[i]-48;
            let v=v*10+d;
            let i=i+1;
        }
        if(neg){
            return -v;
        }
        else {return v;}
    }

    /** Sets this string to hold a representation of the given value. */
    method void setInt(int val) {
        var int lastDigit;
        var int c;
        let val=Math.abs(val);
        let lastDigit=val-(val/10*10);
        let c=lastDigit+48;
        if(val<10){
            let length=0;
            do appendChar(c);
        }
        else {
            do setInt(val/10);
            do appendChar(c);
        }
        return;
    }

    /** Returns the new line character. */
    function char newLine() { 
        return 128;
    }

    /** Returns the backspace character. */
    function char backSpace() { 
        return 129;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() { 
        return 34;
    }
}